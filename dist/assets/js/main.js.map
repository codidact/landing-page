{"version":3,"file":"assets/js/main.js","mappings":"yHAEA,IAAMA,EAAI,SAACC,GAAQ,OAAKC,SAASC,cAAcF,EAAS,EAClDG,EAAS,SAACC,GAAO,OAAKH,SAASI,cAAcD,EAAQ,EAErDE,EAAa,4JAEnBP,EAAE,mBAAmBQ,iBAAiB,QAAS,SAACC,GAC5C,IAAMC,EAAQD,EAAEE,OAAOC,MAClBL,EAAWM,KAAKH,IAIjBV,EAAE,qBAAqBc,YAAc,GACrCd,EAAE,qBAAqBe,UAAW,IAJlCf,EAAE,qBAAqBc,YAAc,6BACrCd,EAAE,qBAAqBe,UAAW,EAK1C,GAEAf,EAAE,YAAYQ,iBAAiB,SAAU,SAACQ,GACtC,IASQC,EATFP,EAAQV,EAAE,mBAAmBY,MACnC,IAAKL,EAAWM,KAAKH,GAIjB,OAHAV,EAAE,qBAAqBc,YAAc,6BACrCd,EAAE,qBAAqBe,UAAW,EAClCC,EAAGE,kBACI,EAEPlB,EAAE,qBAAqBc,YAAc,GACrCd,EAAE,qBAAqBe,UAAW,EAE9BI,OAAOC,eACPH,EAAc,IAAIG,eACXD,OAAOE,gBACdJ,EAAc,IAAII,cAAc,sBAEpCJ,EAAYK,mBAAqB,WACN,GAAnBC,KAAKC,YAAkC,KAAfD,KAAKE,SAC7BzB,EAAE,qBAAqB0B,UAAYH,KAAKI,cAE5C3B,EAAE,WAAW4B,MAAMC,QAAU,MACjC,EACAZ,EAAYa,KAAK,OAAQ,iBAAiB,GAC1Cb,EAAYc,iBAAiB,eAAgB,qCAC7Cd,EAAYe,KAAK,cAAgBtB,GACjCV,EAAE,WAAW4B,MAAMC,QAAU,OAErC,GAOA,IAAMI,EAAS,IAAIb,eAEnBa,EAAOX,mBAAqB,SAACY,GACzB,GAA+B,IAA3BA,EAAKvB,OAAOa,WAAhB,CAIA,IAZaW,EAYTC,GAZSD,EAYQD,EAAKvB,OAAOgB,cAXf,IAAIU,SAASC,WACdC,SAASJ,K,GAWX,IAAIK,WACEC,gBAAgBL,EAAQ,aACjCM,iBAAiB,M,omBAAOC,QAAQ,SAACC,GACzC,IAAMC,EAAS7C,EAAE,WACX8C,EAAM1C,EAAO,OACnB0C,EAAIC,UAAY,WAChB,IAAMC,EAAkB5C,EAAO,MAC/B4C,EAAgBtB,UAAYkB,EAASlB,UACrCsB,EAAgBD,UAAY,qBAC5B,IAAME,EAAS7C,EAAO,UAChB8C,EAAQ9C,EAAO,OACrB8C,EAAMC,aAAa,MAAO,cAC1BD,EAAME,IAAM,iCACZH,EAAOI,OAAOH,GACdD,EAAOE,aAAa,QAAS,eAC7B,IAAMG,EAASlD,EAAO,OACtBkD,EAAOP,UAAY,mBACnBE,EAAOzC,iBAAiB,QAAS,WACzB8C,EAAOC,UAAUC,SAAS,SAC1BF,EAAOC,UAAUE,OAAO,QACxBR,EAAOM,UAAUE,OAAO,YAExBH,EAAOC,UAAUG,IAAI,QACrBT,EAAOM,UAAUG,IAAI,UAE7B,GACAZ,EAAIO,OAAOL,GACXF,EAAIO,OAAOJ,GACXK,EAAO5B,UAAY,OAAHiC,OAAUf,EAASgB,mBAAmBlC,UAAS,SAC/DoB,EAAIO,OAAOC,GACXT,EAAOgB,YAAYf,EACvB,EAlCA,C,KAmCJ,EAEAb,EAAOH,KAAK,MA1FG,2FA2FfG,EAAOD,M","sources":["webpack://landing-page/./src/js/index.js"],"sourcesContent":["import \"../styles/main.scss\";\n\nconst $ = (selector) => document.querySelector(selector);\nconst create = (element) => document.createElement(element);\nconst docLoc = \"https://raw.githubusercontent.com/codidact/docs/master/User-Help/CodidactMainPageFAQ.md\";\nconst emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n$(\".js-email-input\").addEventListener(\"keyup\", (e) => {\n    const email = e.target.value;\n    if (!emailRegex.test(email)) {\n        $(\".js-form-response\").textContent = \"Please enter a valid email\";\n        $(\".js-submit-button\").disabled = true;\n    } else {\n        $(\".js-form-response\").textContent = \"\";\n        $(\".js-submit-button\").disabled = false;\n    }\n});\n\n$(\".js-form\").addEventListener(\"submit\", (ev) => {\n    const email = $(\".js-email-input\").value;\n    if (!emailRegex.test(email)) {\n        $(\".js-form-response\").textContent = \"Please enter a valid email\";\n        $(\".js-submit-button\").disabled = true;\n        ev.preventDefault();\n        return false;\n    } else {\n        $(\".js-form-response\").textContent = \"\";\n        $(\".js-submit-button\").disabled = false;\n        let httpRequest;\n        if (window.XMLHttpRequest) {\n            httpRequest = new XMLHttpRequest();\n        } else if (window.ActiveXObject) {\n            httpRequest = new ActiveXObject(\"Microsoft.XMLHTTP\");\n        }\n        httpRequest.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                $(\".js-form-response\").innerHTML = this.responseText;\n            }\n            $(\".loader\").style.display = \"none\";\n        };\n        httpRequest.open(\"POST\", \"subscribe.php\", true);\n        httpRequest.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        httpRequest.send(\"mail_input=\" + email);\n        $(\".loader\").style.display = \"block\";\n    }\n});\n\nfunction parseMD(input) {\n    const converter = new showdown.Converter();\n    return converter.makeHtml(input);\n}\n\nconst docReq = new XMLHttpRequest();\n\ndocReq.onreadystatechange = (data) => {\n    if (data.target.readyState !== 4) {\n        return;\n    }\n\n    let parsed = parseMD(data.target.responseText);\n    const parser = new DOMParser();\n    let htmlDoc = parser.parseFromString(parsed, \"text/html\");\n    [...htmlDoc.querySelectorAll(\"h2\")].forEach((question) => {\n        const faqDiv = $(\"div#faq\");\n        const div = create(\"div\");\n        div.className = \"question\";\n        const questionHeading = create(\"h2\");\n        questionHeading.innerHTML = question.innerHTML;\n        questionHeading.className = \"heading--secondary\";\n        const button = create(\"button\");\n        const image = create(\"img\");\n        image.setAttribute(\"alt\", \"Arrow down\");\n        image.src = \"assets/img/3rd-party/arrow.svg\";\n        button.append(image);\n        button.setAttribute(\"label\", \"Show answer\");\n        const answer = create(\"div\");\n        answer.className = \"question--answer\";\n        button.addEventListener(\"click\", () => {\n            if (answer.classList.contains(\"show\")) {\n                answer.classList.remove(\"show\");\n                button.classList.remove(\"opened\");\n            } else {\n                answer.classList.add(\"show\");\n                button.classList.add(\"opened\");\n            }\n        });\n        div.append(questionHeading);\n        div.append(button);\n        answer.innerHTML = `<p> ${question.nextElementSibling.innerHTML} </p>`;\n        div.append(answer);\n        faqDiv.appendChild(div);\n    });\n};\n\ndocReq.open(\"GET\", docLoc);\ndocReq.send();\n"],"names":["$","selector","document","querySelector","create","element","createElement","emailRegex","addEventListener","e","email","target","value","test","textContent","disabled","ev","httpRequest","preventDefault","window","XMLHttpRequest","ActiveXObject","onreadystatechange","this","readyState","status","innerHTML","responseText","style","display","open","setRequestHeader","send","docReq","data","input","parsed","showdown","Converter","makeHtml","DOMParser","parseFromString","querySelectorAll","forEach","question","faqDiv","div","className","questionHeading","button","image","setAttribute","src","append","answer","classList","contains","remove","add","concat","nextElementSibling","appendChild"],"sourceRoot":""}